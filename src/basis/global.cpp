/*
 *  Created on: 2017-12-26
 *      Author: Young.Geo
 *          QQ: 473763733
 *       Email: anxan524@126.com
 */
#include "global.h"
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
global_t global;
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
void parse_args ( int argc , char * argv[] ) ;
void global_init ( int argc , const char * argv[] )
{
  memset(&global, 0, sizeof(global));

  //初始化版本信息参数：编译时指定
  global.master_version = 1 ;
  global.secondary_version = 0 ;

  //解析参数
  parse_args(argc, (char **)argv) ;

  //屏蔽一些不需要的信号量
  //reg_sig_func () ;

  //设置进程名
  //proctitle_init(argc, (char **)argv) ;

  //初始化节点ID号
  //sprintf(global.navigation_id, "hubb");

  //各节点信息分别初始化
 /*
  if ( global.node_default_device_filename[0] ) {
    strcpy(global.node_2d_device_filename, global.node_default_device_filename);
  } else {
    strcpy(global.node_2d_device_filename, (char *)"/dev/tty.wchusbserial1410");
  }
*/

}
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
void parse_args ( int argc , char * argv[] )
{
  static const int step_init = 2 ;

  int i = 0 , step = 2 ;
  char * v = NULL;

  for ( i = 1 ; i < argc ; i += step )
  {
    step = step_init ;

    v = argv[i] ;
    if ( v[0] != '-' )
    {
      break ;
    }
/*
    switch ( v[1] )
    {
      case 'd'://device filaneme
        v = argv[i + 1] ;
        strcpy(global.node_default_device_filename, v) ;
        break ;
      case 'j':
        step = 1 ;
        global.node_imu_just_odo = 1 ;
        break ;

      case 'l' ://loglevel
        v = argv[i + 1] ;
        global.loglevel = atoi(v) ;
        break ;
      case 'v':
      case 'V':
        xmessage("%s\n" , global.version) ;
        exit(0) ;
      default:
        xmessage ( "error: unknow [-%c] ! \n%s\n" , v[1], global.useage ) ;
        exit(0) ;
    }
*/
  }
}
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
